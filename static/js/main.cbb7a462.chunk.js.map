{"version":3,"sources":["constants/states.js","components/Header/Header.jsx","components/Header/index.js","components/common/CheckBox/index.js","components/common/CheckBox/Checkbox.jsx","constants/color.js","components/Todo/TodoItem/index.js","components/Todo/TodoItem/TodoItem.jsx","components/Todo/index.js","components/Todo/AllTodo.jsx","components/common/Button/index.js","components/common/Button/button.jsx","components/Input/NewTaskInput/index.js","components/Input/NewTaskInput/NewTaskInput.jsx","components/Input/SearchInput/index.js","components/Input/SearchInput/SearchInput.jsx","components/ViewState/index.js","components/ViewState/ViewState.jsx","App.js","index.js"],"names":["ALL","COMPLETED","REMANING","Header","className","CheckBox","status","onChange","type","checked","TodoItem","getStyle","backgroundColor","props","item","completed","colors","getPStyle","textDecoration","style","this","content","toggleCompletion","bind","id","Component","AllTodos","filterTodoItems","currentShowing","filterFromSearch","searchText","itemContent","trim","toLowerCase","includes","allItems","items","filter","map","todoItem","key","increaseCount","call","Button","btnClassName","btnContent","onClick","NewTaskInput","addInput","e","setState","inputValue","target","value","addItemAndClear","state","addItem","placeholder","SearchInput","changeSearchText","clearText","noOfItems","ViewState","Object","entries","states","index","changeViewState","App","todos","Date","now","changeCompletion","newState","text","count","length","itemId","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbb7a462.chunk.js","sourcesContent":["export default {\n  ALL: 0,\n  COMPLETED: 1,\n  REMANING: 2  \n}","import React from 'react';\nimport './header.scss';\n\nfunction Header() {\n    return (\n      <div className=\"Header\">\n          <h1>Lazy Beaver</h1>\n      </div>\n    )\n}\n\nexport default Header;","import Header from './Header';\n\nexport default Header;\n","import CheckBox from './Checkbox';\n\nexport default CheckBox;","import React from 'react';\n\nimport './checkBox.scss';\n\nexport default function CheckBox({ className, status, onChange }) {\n  return (\n    <input type=\"checkbox\" className={className} checked={status} onChange={onChange}></input>\n  )\n}\n\n\n","export default {\n  baseColor : '#4870ff',\n  almostWhite: '#F0F2F7'\n}","import TodoItem from './TodoItem';\n\nexport default TodoItem;","import React, { Component } from 'react';\nimport Checkbox from '../../common/CheckBox/index';\nimport colors from '../../../constants/color';\nimport './todoItem.scss';\n\nexport class TodoItem extends Component {\n\n  getStyle = () => {\n    return {\n      backgroundColor : this.props.item.completed ? colors.almostWhite : 'white',\n    }\n  }\n\n  getPStyle = () => {\n    return {\n      textDecoration : this.props.item.completed ? 'line-through' : 'none',\n    }\n  }\n\n\n  render() {\n    return (\n      <li style={this.getStyle()} className=\"TodoItem\">\n        <p className = {`TodoItem__p ${this.props.item.completed ? 'check' : ''}`}>{this.props.item.content}</p>\n        <Checkbox item ={this.props.item} status = {this.props.item.completed} className = 'itemCheckBox' onChange = {this.props.toggleCompletion.bind(this, this.props.item.id)} />\n      </li>\n    )\n  }\n}\n\nexport default TodoItem;\n","import AllTodos from './AllTodo';\n\nexport default AllTodos;\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem/index';\n\nimport './todo.scss';\n\nexport class AllTodos extends Component {\n\n  filterTodoItems = (item) => {\n    if (this.props.currentShowing === 0){\n      return item;\n    }else if( this.props.currentShowing === 1 && item.completed === true ){\n      return item;\n    }else if(this.props.currentShowing === 2 && item.completed === false){\n      return item;\n    }\n  }\n\n  filterFromSearch = (item)=>{\n    if (this.props.searchText === '') return true;\n    let itemContent = item.content.trim().toLowerCase();\n    let searchText = this.props.searchText.trim().toLowerCase();\n    if (itemContent.includes(searchText)){\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    let allItems = this.props.items;\n    return (\n      <div className=\"AllTodos\">\n        <ul>\n          {\n            allItems\n            .filter(item => this.filterFromSearch(item))\n            .filter(this.filterTodoItems)\n            .map((todoItem) => <TodoItem key={todoItem.id} item={todoItem} increaseCount={this.props.increaseCount} toggleCompletion={(id) => this.props.toggleCompletion.call(this, id) }/>)\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default AllTodos;\n","import Button from './button';\n\nexport default Button;\n","import React from 'react';\n\nimport './button.scss';\n\nexport default function Button ({btnClassName, btnContent,onClick}){\n  return(\n    <button className={btnClassName} onClick={onClick}>{btnContent}</button>\n  )\n}\n\n","import NewTaskInput from './NewTaskInput';\n\nexport default NewTaskInput;","import React, { Component } from 'react';\nimport Button from '../../common/Button';\nimport './newTaskInput.scss';\n\nexport class InputArea extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      inputValue : ''\n    }\n  }\n\n  addInput = (e)=>{\n    this.setState ({\n      inputValue : e.target.value\n    })\n  }\n\n  addItemAndClear = () =>{\n    if (this.state.inputValue){\n      this.props.addItem.call(this, this.state.inputValue);\n      this.setState({\n        inputValue : ''\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"InputArea\">\n        <input className=\"newInput\" placeholder=\"Add new Task\" value={this.state.inputValue} onChange = {(e)=>this.addInput(e)}></input>\n        <Button btnContent=\"+\" onClick={this.addItemAndClear} btnClassName=\"addButton\"/>\n      </div>\n    )\n  }\n}\n\nexport default InputArea;\n","import  SearchInput from './SearchInput';\n\nexport default SearchInput;","import React, { Component } from 'react';\n\nimport './searchInput.scss';\n\nexport class SearchInput extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: ''\n    }\n  }\n\n  addInput = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    }, () => {\n      this.props.changeSearchText.call(this, this.state.inputValue)\n    })\n  }\n\n  clearText = () => {\n    this.setState({\n      inputValue: ''\n    }, () => {\n      this.props.changeSearchText.call(this, this.state.inputValue)\n    })\n  }\n\n  render() {\n    if (this.props.noOfItems) {\n      return (\n        <div className=\"SearchArea\">\n          <input className=\"searchtext\" placeholder=\"Search\" value={this.state.inputValue} onChange={this.addInput}></input>\n          <button className=\"searchBtn\" onClick={this.clearText}><i className=\"fas fa-times\"></i></button>\n        </div>\n      )\n    }else{\n      return null;\n    }\n  }\n}\n\nexport default SearchInput;\n","import ViewState from './ViewState';\n\nexport default ViewState;","import React, { Component } from 'react';\nimport states from '../../constants/states';\nimport Button from '../common/Button/index';\nimport './viewState.scss';\n\n\nexport class ViewState extends Component {\n\n  render() {\n    if (this.props.noOfItems){\n    return (\n      <div className=\"ViewState\">\n        {\n          Object.entries(states)\n          .map((item, index) => <Button key = {index} btnClassName = {`ViewChangeBtn ${this.props.currentShowing === index ? 'active' : '' }`} btnContent={item[0]} id = {index} onClick = {this.props.changeViewState.bind(this, index)}/>) \n        }\n      </div>\n    )\n  }else{\n    return null;\n  }\n  }\n}\n\nexport default ViewState;\n","import React from 'react';\nimport states from './constants/states';\nimport Header from './components/Header/index.js';\nimport AllTodos from './components/Todo';\nimport NewTaskInput from './components/Input/NewTaskInput';\nimport SearchInput from './components/Input/SearchInput';\nimport ViewState from './components/ViewState';\n\nimport './App.scss';\nimport './style/reset.scss';\nimport './style/style.scss';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      todos: [\n      ],\n      searchText: '',\n      currentShowing: states.ALL,\n      count: 0\n    }\n  }\n\n  addItem = (item) => {\n    this.setState({\n      todos : [...this.state.todos,{\n        id: Date.now(),\n        content: item,\n        completed: false\n      }]\n    })\n  }\n\n  changeCompletion = (id)=>{\n    this.setState({\n      todos: this.state.todos.map((todoItem) => {\n        if (todoItem.id === id) todoItem.completed = !todoItem.completed;\n        return todoItem;\n      })\n    })\n  }\n\n  changeViewState = (newState) => {\n    this.setState({\n      currentShowing: newState\n    })\n  }\n\n  changeSearchText = (text) => {\n    this.setState ({\n      searchText: text,\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <NewTaskInput addItem = {this.addItem}/>    \n          <ViewState noOfItems = {this.state.todos.length} currentShowing = {this.state.currentShowing} changeViewState= {(newState) => this.changeViewState (newState)}/>\n          <SearchInput noOfItems = {this.state.todos.length} changeSearchText = {this.changeSearchText} />\n          <AllTodos items={this.state.todos} currentShowing = {this.state.currentShowing} toggleCompletion={(itemId)=> this.changeCompletion(itemId)} searchText = {this.state.searchText} />\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}